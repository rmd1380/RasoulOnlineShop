server.port=8080
spring.jpa.database=POSTGRESQL
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/onlineShopDB
spring.datasource.username=postgres
spring.datasource.password=123
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.jpa.show-sql=true
jwt.secret = MY_JWT_T0keN_S3crE+

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/rasoulonlineshop.p12
# The password used to generate the certificate
server.ssl.key-store-password=rmd123onlineshop
# The alias mapped to the certificate
server.ssl.key-alias=rasoulonlineshop
server.ssl.enabled=true
logging.level.org.springframework.web.client.RestTemplate=DEBUG
#payment.nextpay.apikey = 110b2bd3-64a1-4cde-bc28-44830355394b
#payment.nextpay.tokenEndPoint = https://nextpay.org/nx/gateway/token
#payment.nextpay.callbackUri = https://localhost:8080/api/txn/verify
#payment.nextpay.paymentUri = https://nextpay.org/nx/gateway/payment/
#payment.nextpay.verifyUri = https://nextpay.org/nx/gateway/verify

#payment.pay.apikey = 110b2bd3-64a1-4cde-bc28-44830355394b
payment.pay.send = https://pay.ir/pg/send/
payment.pay.tokenEndPoint = https://pay.ir/pg/
payment.pay.callbackUri = https://localhost:8080/api/txn/verify
#payment.pay.paymentUri = https://nextpay.org/nx/gateway/payment/
payment.pay.verifyUri = https://pay.ir/pg/verify
